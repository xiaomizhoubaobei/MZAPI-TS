name: 同步代码到gitee和CNB
on:
  pull_request:
    branches:
      - main
    types: [closed]
    paths:
      - 'src/**'

permissions:
  contents: read

jobs:
  sync-code:
    permissions:
      contents: write # for Git to git push
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true && github.event.sender.type != 'Bot'
    env:
      SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
      GITEE_USER: ${{ secrets.GITEE_USER }}
      GITEE_EMAIL: ${{ secrets.GITEE_EMAIL }}
      CNB_USER: ${{ secrets.CNB_USER }}
      CNB_EMAIL: ${{ secrets.CNB_EMAIL }}
      CNB_TOKEN: ${{ secrets.CNB_TOKEN }}
      ATOMGITNAME: ${{ secrets.ATOMGITNAME }}
      ATOMGITTOKEN: ${{ secrets.ATOMGITTOKEN }}
    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
        with:
          egress-policy: audit

      - name: Audit - Workflow started
        run: |
          echo "Sync to Coding workflow started for PR #${{ github.event.pull_request.number }}" >> audit.log
          echo "Triggered by: ${{ github.event.pull_request.user.login }}" >> audit.log
          echo "Commit SHA: ${{ github.sha }}" >> audit.log
          echo "Timestamp: $(date -u)" >> audit.log

      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0
      - name: Audit - Code checked out
        run: |
          echo "Code checked out with full history" >> audit.log
          echo "Repository: ${{ github.repository }}" >> audit.log
          echo "Timestamp: $(date -u)" >> audit.log

      - name: Set up SSH Agent
        uses: webfactory/ssh-agent@a6f90b1f127823b31d4d4a8d96047790581349bd # v0.9.1
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
      - name: Audit - SSH Agent configured
        run: |
          echo "SSH Agent configured with private key" >> audit.log
          echo "Timestamp: $(date -u)" >> audit.log

      - name: Add Gitee SSH Fingerprint
        run: ssh-keyscan -H gitee.com >> ~/.ssh/known_hosts

      - name: Configure Git User for Gitee
        run: |
          git config --global user.name "${{ secrets.GITEE_USER }}"
          git config --global user.email "${{ secrets.GITEE_EMAIL }}"
      - name: Audit - Git user configured for Gitee
        run: |
          echo "Git user configured for Gitee" >> audit.log
          echo "User: ${{ secrets.GITEE_USER }}" >> audit.log
          echo "Email: ${{ secrets.GITEE_EMAIL }}" >> audit.log
          echo "Timestamp: $(date -u)" >> audit.log

      - name: Add Gitee Remote
        run: git remote add gitee git@gitee.com:qinjielove/mzapi-ts.git
      - name: Audit - Gitee remote added
        run: |
          echo "Gitee remote added" >> audit.log
          echo "Remote URL: git@gitee.com:qinjielove/mzapi-ts.git" >> audit.log
          echo "Timestamp: $(date -u)" >> audit.log

      - name: Push to Gitee
        run: |
          if ! git push gitee main; then
            echo "Warning: Failed to push to Gitee" >> audit.log
            echo "Branch: main" >> audit.log
            echo "Timestamp: $(date -u)" >> audit.log
            # Continue with the workflow even if this step fails
          fi
      - name: Audit - Pushed to Gitee
        run: |
          echo "Code pushed to Gitee" >> audit.log
          echo "Branch: main" >> audit.log
          echo "Timestamp: $(date -u)" >> audit.log

      - name: Configure Git User for CNB
        run: |
          git config --global user.name "${{ secrets.CNB_USER }}"
          git config --global user.email "${{ secrets.CNB_EMAIL }}"
      - name: Audit - Git user configured for CNB
        run: |
          echo "Git user configured for CNB" >> audit.log
          echo "User: ${{ secrets.CNB_USER }}" >> audit.log
          echo "Email: ${{ secrets.CNB_EMAIL }}" >> audit.log
          echo "Timestamp: $(date -u)" >> audit.log

      - name: Add CNB Remote
        run: git remote add cnb https://${{ secrets.CNB_TOKEN }}@cnb.cool/XMZZUZHI/MZAPI/TypeScript
      - name: Audit - CNB remote added
        run: |
          echo "CNB remote added" >> audit.log
          echo "Remote URL: https://***@cnb.cool/XMZZUZHI/MZAPI/TypeScript" >> audit.log
          echo "Timestamp: $(date -u)" >> audit.log

      - name: Push to CNB
        run: |
          if ! git push cnb main; then
            echo "Warning: Failed to push to CNB" >> audit.log
            echo "Branch: main" >> audit.log
            echo "Timestamp: $(date -u)" >> audit.log
            # Continue with the workflow even if this step fails
          fi
      - name: Audit - Pushed to CNB
        run: |
          echo "Code pushed to CNB" >> audit.log
          echo "Branch: main" >> audit.log
          echo "Timestamp: $(date -u)" >> audit.log

      - name: Configure Git User for Atomgit
        run: |
          git config --global user.name "${{ secrets.ATOMGITNAME }}"
          git config --global user.email "${{ secrets.CNB_EMAIL }}"
      - name: Audit - Git user configured for Atomgit
        run: |
          echo "Git user configured for Atomgit" >> audit.log
          echo "User: ${{ secrets.ATOMGITNAME }}" >> audit.log
          echo "Email: ${{ secrets.CNB_EMAIL }}" >> audit.log
          echo "Timestamp: $(date -u)" >> audit.log

      - name: Add Atomgit Remote
        run: git remote add atomgit https://${{ secrets.ATOMGITNAME }}:${{ secrets.ATOMGITTOKEN }}@atomgit.com/qixiaoxin1/mzapi-ts.git
      - name: Audit - Atomgit remote added
        run: |
          echo "Atomgit remote added" >> audit.log
          echo "Remote URL: https://***:***@atomgit.com/qixiaoxin1/mzapi-ts.git" >> audit.log
          echo "Timestamp: $(date -u)" >> audit.log

      - name: Push to Atomgit
        run: |
          if ! git push atomgit main; then
            echo "Warning: Failed to push to Atomgit" >> audit.log
            echo "Branch: main" >> audit.log
            echo "Timestamp: $(date -u)" >> audit.log
            # Continue with the workflow even if this step fails
          fi
      - name: Audit - Pushed to Atomgit
        run: |
          echo "Code pushed to Atomgit" >> audit.log
          echo "Branch: main" >> audit.log
          echo "Timestamp: $(date -u)" >> audit.log

      - name: Upload audit log
        uses: actions/upload-artifact@v5
        with:
          name: sync-to-coding-audit-log
          path: audit.log
          retention-days: 30